{
  "service": {
    "service": "django-serverless",
    "serviceObject": {
      "name": "django-serverless"
    },
    "provider": {
      "name": "aws",
      "region": "us-east-1",
      "runtime": "python3.9",
      "stage": "stg",
      "timeout": 29,
      "memorySize": 2048,
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:*"
              ],
              "Resource": [
                "arn:aws:s3:::weather-serverless-static",
                "arn:aws:s3:::weather-serverless-static/*"
              ]
            }
          ]
        }
      },
      "versionFunctions": true,
      "environment": {
        "OPENWEATHER_API_KEY": "52310ae58f102a929f91e2a7ba292954",
        "OPENWEATHER_AIR_POLLUTION_API_KEY": "7b2b701eadb3580428ae950769e26b2a",
        "STAGE": "production",
        "STATIC_FILES_BUCKET_NAME": "weather-serverless-static",
        "AWS_REGION_NAME": "us-east-1",
        "DB_NAME": "",
        "DB_USER": "postgres",
        "DB_PASSWORD": "",
        "DB_HOST": "",
        "DB_PORT": "5432"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "WsgiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/django-serverless-stg-wsgi"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "django-serverless",
                        "stg",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/django-serverless-stg*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/django-serverless-stg*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "django-serverless",
                    "stg",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "WsgiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-e66ab94c-fe06",
                "S3Key": "serverless/django-serverless/stg/1739214567576-2025-02-10T19:09:27.576Z/django-serverless.zip"
              },
              "Handler": "wsgi_handler.handler",
              "Runtime": "python3.9",
              "FunctionName": "django-serverless-stg-wsgi",
              "MemorySize": 2048,
              "Timeout": 29,
              "Environment": {
                "Variables": {
                  "OPENWEATHER_API_KEY": "52310ae58f102a929f91e2a7ba292954",
                  "OPENWEATHER_AIR_POLLUTION_API_KEY": "7b2b701eadb3580428ae950769e26b2a",
                  "STAGE": "production",
                  "STATIC_FILES_BUCKET_NAME": "weather-serverless-static",
                  "AWS_REGION_NAME": "us-east-1",
                  "DB_NAME": "",
                  "DB_USER": "postgres",
                  "DB_PASSWORD": "",
                  "DB_HOST": "",
                  "DB_PORT": "5432"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "WsgiLogGroup"
            ]
          },
          "WsgiLambdaVersionWtEOem9VM4TdOVPwTpeGKyjj4HRymVN1t3n3Ub5BgU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WsgiLambdaFunction"
              },
              "CodeSha256": "T9pOW/ijkcOIOiIaK31EViatUJkxvmXXd1QziYtqWgU="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "stg-django-serverless",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceProxyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "WsgiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "WsgiLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodProxyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "WsgiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "WsgiLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1739214434717": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "stg"
            },
            "DependsOn": [
              "ApiGatewayMethodAny",
              "ApiGatewayMethodProxyVarAny"
            ]
          },
          "WsgiLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WsgiLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "StaticFilesBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "weather-serverless-static",
              "PublicAccessBlockConfiguration": {
                "BlockPublicAcls": false,
                "BlockPublicPolicy": false,
                "IgnorePublicAcls": false,
                "RestrictPublicBuckets": false
              }
            }
          },
          "StaticFilesBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "StaticFilesBucket"
              },
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "PublicReadGetObject",
                    "Action": "s3:GetObject",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Resource": "arn:aws:s3:::weather-serverless-static/*"
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-e66ab94c-fe06",
            "Export": {
              "Name": "sls-django-serverless-stg-ServerlessDeploymentBucketName"
            }
          },
          "WsgiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WsgiLambdaVersionWtEOem9VM4TdOVPwTpeGKyjj4HRymVN1t3n3Ub5BgU"
            },
            "Export": {
              "Name": "sls-django-serverless-stg-WsgiLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/stg"
                ]
              ]
            },
            "Export": {
              "Name": "sls-django-serverless-stg-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "wsgi": {
        "app": "enhanced_weather_app.wsgi.application"
      },
      "pythonRequirements": {
        "fileName": "requirements.txt"
      }
    },
    "plugins": [
      "serverless-wsgi",
      "serverless-python-requirements",
      "serverless-dotenv-plugin"
    ],
    "pluginsData": {},
    "functions": {
      "wsgi": {
        "handler": "wsgi_handler.handler",
        "events": [
          {
            "http": "ANY /"
          },
          {
            "http": "ANY /{proxy+}"
          }
        ],
        "name": "django-serverless-stg-wsgi",
        "package": {},
        "memory": 2048,
        "timeout": 29,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "WsgiLambdaVersionWtEOem9VM4TdOVPwTpeGKyjj4HRymVN1t3n3Ub5BgU"
      }
    },
    "resources": {
      "Resources": {
        "StaticFilesBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "weather-serverless-static",
            "PublicAccessBlockConfiguration": {
              "BlockPublicAcls": false,
              "BlockPublicPolicy": false,
              "IgnorePublicAcls": false,
              "RestrictPublicBuckets": false
            }
          }
        },
        "StaticFilesBucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "StaticFilesBucket"
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "PublicReadGetObject",
                  "Action": "s3:GetObject",
                  "Effect": "Allow",
                  "Principal": "*",
                  "Resource": "arn:aws:s3:::weather-serverless-static/*"
                }
              ]
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "org": "ericnbello",
      "service": "django-serverless",
      "useDotenv": true,
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "package": {
        "exclude": [
          "venv/**",
          "__pycache__/*",
          "node_modules/**",
          "README.md",
          "pytest.ini",
          "conftest.py",
          ".venv",
          ".venv.example",
          "package.json",
          "package-lock.json",
          "terraform-aws/**",
          ".gitignore",
          "docker-compose.ci.yml",
          "docker-compose.prod.yml",
          "docker-compose.yml",
          "Procfile",
          "render.yaml",
          "terraform.tfstate",
          "Dockerfile",
          "Dockerfile.render",
          ".render-buildpacks.json",
          ".dockerignore",
          "nginx/**",
          ".weatherenv",
          "weatherenv/**",
          "env/**",
          "static/**",
          "staticfiles/**",
          "myenv/**"
        ],
        "artifactsS3KeyDirname": "serverless/django-serverless/stg/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-us-east-1-e66ab94c-fe06",
        "patterns": [
          "wsgi_handler.py",
          "serverless_wsgi.py",
          ".serverless-wsgi"
        ],
        "artifact": "/Users/ericbello/projects/enhanced_weather_app/.serverless/django-serverless.zip",
        "artifactDirectoryName": "serverless/django-serverless/stg/1739214567576-2025-02-10T19:09:27.576Z"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "appId": null,
    "org": "ericnbello",
    "orgId": null,
    "layers": {},
    "artifact": "/Users/ericbello/projects/enhanced_weather_app/.serverless/django-serverless.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/django-serverless/stg/1739214567576-2025-02-10T19:09:27.576Z",
    "artifact": "django-serverless.zip"
  }
}